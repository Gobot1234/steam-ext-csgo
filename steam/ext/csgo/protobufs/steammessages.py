# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: steammessages.proto
# plugin: python-betterproto

from dataclasses import dataclass
from typing import List

import betterproto


class GcProtoBufMsgSrc(betterproto.Enum):
    Unspecified = 0
    FromSystem = 1
    FromSteamID = 2
    FromGC = 3
    ReplySystem = 4


class CMsgGcRoutingInfoRoutingMethod(betterproto.Enum):
    Random = 0
    Discard = 1
    ClientSteamID = 2
    ProtobufFieldUint64 = 3
    WebapiParamUint64 = 4


class CMsgGcMsgSetOptionsOption(betterproto.Enum):
    NotifyUserSessions = 0
    NotifyServerSessions = 1
    NotifyAchievements = 2
    NotifyVacAction = 3


class CMsgDpPartnerMicroTxnsResponseEErrorCode(betterproto.Enum):
    Valid = 0
    InvalidAppID = 1
    InvalidPartnerInfo = 2
    NoTransactions = 3
    SQLFailure = 4
    PartnerInfoDiscrepancy = 5
    TransactionInsertFailed = 7
    AlreadyRunning = 8
    InvalidTransactionData = 9


@dataclass(eq=False, repr=False)
class CMsgProtoBufHeader(betterproto.Message):
    client_steam_id: int = betterproto.fixed64_field(1)
    client_session_id: int = betterproto.int32_field(2)
    source_app_id: int = betterproto.uint32_field(3)
    job_id_source: int = betterproto.fixed64_field(10)
    job_id_target: int = betterproto.fixed64_field(11)
    target_job_name: str = betterproto.string_field(12)
    eresult: int = betterproto.int32_field(13)
    error_message: str = betterproto.string_field(14)
    ip: int = betterproto.uint32_field(15)
    gc_msg_src: "GcProtoBufMsgSrc" = betterproto.enum_field(200)
    gc_dir_index_source: int = betterproto.uint32_field(201)


@dataclass(eq=False, repr=False)
class CMsgWebApiKey(betterproto.Message):
    status: int = betterproto.uint32_field(1)
    account_id: int = betterproto.uint32_field(2)
    publisher_group_id: int = betterproto.uint32_field(3)
    key_id: int = betterproto.uint32_field(4)
    domain: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class CMsgHttpRequest(betterproto.Message):
    request_method: int = betterproto.uint32_field(1)
    hostname: str = betterproto.string_field(2)
    url: str = betterproto.string_field(3)
    headers: List["CMsgHttpRequestRequestHeader"] = betterproto.message_field(4)
    get_params: List["CMsgHttpRequestQueryParam"] = betterproto.message_field(5)
    post_params: List["CMsgHttpRequestQueryParam"] = betterproto.message_field(6)
    body: bytes = betterproto.bytes_field(7)
    absolute_timeout: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class CMsgHttpRequestRequestHeader(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class CMsgHttpRequestQueryParam(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: bytes = betterproto.bytes_field(2)


@dataclass(eq=False, repr=False)
class CMsgWebApiRequest(betterproto.Message):
    unused_job_name: str = betterproto.string_field(1)
    interface_name: str = betterproto.string_field(2)
    method_name: str = betterproto.string_field(3)
    version: int = betterproto.uint32_field(4)
    api_key: "CMsgWebApiKey" = betterproto.message_field(5)
    request: "CMsgHttpRequest" = betterproto.message_field(6)
    routing_app_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class CMsgHttpResponse(betterproto.Message):
    status_code: int = betterproto.uint32_field(1)
    headers: List["CMsgHttpResponseResponseHeader"] = betterproto.message_field(2)
    body: bytes = betterproto.bytes_field(3)


@dataclass(eq=False, repr=False)
class CMsgHttpResponseResponseHeader(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class CMsgAmFindAccounts(betterproto.Message):
    search_type: int = betterproto.uint32_field(1)
    search_string: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class CMsgAmFindAccountsResponse(betterproto.Message):
    steam_id: List[int] = betterproto.fixed64_field(1)


@dataclass(eq=False, repr=False)
class CMsgNotifyWatchdog(betterproto.Message):
    source: int = betterproto.uint32_field(1)
    alert_type: int = betterproto.uint32_field(2)
    alert_destination: int = betterproto.uint32_field(3)
    critical: bool = betterproto.bool_field(4)
    time: int = betterproto.uint32_field(5)
    appid: int = betterproto.uint32_field(6)
    text: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class CMsgAmGetLicenses(betterproto.Message):
    steamid: int = betterproto.fixed64_field(1)


@dataclass(eq=False, repr=False)
class CMsgPackageLicense(betterproto.Message):
    package_id: int = betterproto.uint32_field(1)
    time_created: int = betterproto.uint32_field(2)
    owner_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CMsgAmGetLicensesResponse(betterproto.Message):
    license: List["CMsgPackageLicense"] = betterproto.message_field(1)
    result: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CMsgAmGetUserGameStats(betterproto.Message):
    steam_id: int = betterproto.fixed64_field(1)
    game_id: int = betterproto.fixed64_field(2)
    stats: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CMsgAmGetUserGameStatsResponse(betterproto.Message):
    steam_id: int = betterproto.fixed64_field(1)
    game_id: int = betterproto.fixed64_field(2)
    eresult: int = betterproto.int32_field(3)
    stats: List["CMsgAmGetUserGameStatsResponseStats"] = betterproto.message_field(4)
    achievement_blocks: List["CMsgAmGetUserGameStatsResponseAchievementBlocks"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class CMsgAmGetUserGameStatsResponseStats(betterproto.Message):
    stat_id: int = betterproto.uint32_field(1)
    stat_value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CMsgAmGetUserGameStatsResponseAchievementBlocks(betterproto.Message):
    achievement_id: int = betterproto.uint32_field(1)
    achievement_bit_id: int = betterproto.uint32_field(2)
    unlock_time: int = betterproto.fixed32_field(3)


@dataclass(eq=False, repr=False)
class CMsgGcGetCommandList(betterproto.Message):
    app_id: int = betterproto.uint32_field(1)
    command_prefix: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class CMsgGcGetCommandListResponse(betterproto.Message):
    command_name: List[str] = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class CgcMsgMemCachedGet(betterproto.Message):
    keys: List[str] = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class CgcMsgMemCachedGetResponse(betterproto.Message):
    values: List["CgcMsgMemCachedGetResponseValueTag"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CgcMsgMemCachedGetResponseValueTag(betterproto.Message):
    found: bool = betterproto.bool_field(1)
    value: bytes = betterproto.bytes_field(2)


@dataclass(eq=False, repr=False)
class CgcMsgMemCachedSet(betterproto.Message):
    keys: List["CgcMsgMemCachedSetKeyPair"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CgcMsgMemCachedSetKeyPair(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: bytes = betterproto.bytes_field(2)


@dataclass(eq=False, repr=False)
class CgcMsgMemCachedDelete(betterproto.Message):
    keys: List[str] = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class CgcMsgMemCachedStats(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CgcMsgMemCachedStatsResponse(betterproto.Message):
    curr_connections: int = betterproto.uint64_field(1)
    cmd_get: int = betterproto.uint64_field(2)
    cmd_set: int = betterproto.uint64_field(3)
    cmd_flush: int = betterproto.uint64_field(4)
    get_hits: int = betterproto.uint64_field(5)
    get_misses: int = betterproto.uint64_field(6)
    delete_hits: int = betterproto.uint64_field(7)
    delete_misses: int = betterproto.uint64_field(8)
    bytes_read: int = betterproto.uint64_field(9)
    bytes_written: int = betterproto.uint64_field(10)
    limit_maxbytes: int = betterproto.uint64_field(11)
    curr_items: int = betterproto.uint64_field(12)
    evictions: int = betterproto.uint64_field(13)
    bytes: int = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class CgcMsgSqlStats(betterproto.Message):
    schema_catalog: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CgcMsgSqlStatsResponse(betterproto.Message):
    threads: int = betterproto.uint32_field(1)
    threads_connected: int = betterproto.uint32_field(2)
    threads_active: int = betterproto.uint32_field(3)
    operations_submitted: int = betterproto.uint32_field(4)
    prepared_statements_executed: int = betterproto.uint32_field(5)
    non_prepared_statements_executed: int = betterproto.uint32_field(6)
    deadlock_retries: int = betterproto.uint32_field(7)
    operations_timed_out_in_queue: int = betterproto.uint32_field(8)
    errors: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class CMsgAmAddFreeLicense(betterproto.Message):
    steamid: int = betterproto.fixed64_field(1)
    ip_public: int = betterproto.uint32_field(2)
    packageid: int = betterproto.uint32_field(3)
    store_country_code: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class CMsgAmAddFreeLicenseResponse(betterproto.Message):
    eresult: int = betterproto.int32_field(1)
    purchase_result_detail: int = betterproto.int32_field(2)
    transid: int = betterproto.fixed64_field(3)


@dataclass(eq=False, repr=False)
class CgcMsgGetIpLocation(betterproto.Message):
    ips: List[int] = betterproto.fixed32_field(1)


@dataclass(eq=False, repr=False)
class CipLocationInfo(betterproto.Message):
    ip: int = betterproto.uint32_field(1)
    latitude: float = betterproto.float_field(2)
    longitude: float = betterproto.float_field(3)
    country: str = betterproto.string_field(4)
    state: str = betterproto.string_field(5)
    city: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class CgcMsgGetIpLocationResponse(betterproto.Message):
    infos: List["CipLocationInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CgcMsgSystemStatsSchema(betterproto.Message):
    gc_app_id: int = betterproto.uint32_field(1)
    schema_kv: bytes = betterproto.bytes_field(2)


@dataclass(eq=False, repr=False)
class CgcMsgGetSystemStats(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CgcMsgGetSystemStatsResponse(betterproto.Message):
    gc_app_id: int = betterproto.uint32_field(1)
    stats_kv: bytes = betterproto.bytes_field(2)
    active_jobs: int = betterproto.uint32_field(3)
    yielding_jobs: int = betterproto.uint32_field(4)
    user_sessions: int = betterproto.uint32_field(5)
    game_server_sessions: int = betterproto.uint32_field(6)
    socaches: int = betterproto.uint32_field(7)
    socaches_to_unload: int = betterproto.uint32_field(8)
    socaches_loading: int = betterproto.uint32_field(9)
    writeback_queue: int = betterproto.uint32_field(10)
    steamid_locks: int = betterproto.uint32_field(11)
    logon_queue: int = betterproto.uint32_field(12)
    logon_jobs: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class CMsgAmSendEmail(betterproto.Message):
    steamid: int = betterproto.fixed64_field(1)
    email_msg_type: int = betterproto.uint32_field(2)
    email_format: int = betterproto.uint32_field(3)
    persona_name_tokens: List["CMsgAmSendEmailPersonaNameReplacementToken"] = betterproto.message_field(5)
    source_gc: int = betterproto.uint32_field(6)
    tokens: List["CMsgAmSendEmailReplacementToken"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class CMsgAmSendEmailReplacementToken(betterproto.Message):
    token_name: str = betterproto.string_field(1)
    token_value: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class CMsgAmSendEmailPersonaNameReplacementToken(betterproto.Message):
    steamid: int = betterproto.fixed64_field(1)
    token_name: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class CMsgAmSendEmailResponse(betterproto.Message):
    eresult: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CMsgGcGetEmailTemplate(betterproto.Message):
    app_id: int = betterproto.uint32_field(1)
    email_msg_type: int = betterproto.uint32_field(2)
    email_lang: int = betterproto.int32_field(3)
    email_format: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class CMsgGcGetEmailTemplateResponse(betterproto.Message):
    eresult: int = betterproto.uint32_field(1)
    template_exists: bool = betterproto.bool_field(2)
    template: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class CMsgAmGrantGuestPasses2(betterproto.Message):
    steam_id: int = betterproto.fixed64_field(1)
    package_id: int = betterproto.uint32_field(2)
    passes_to_grant: int = betterproto.int32_field(3)
    days_to_expiration: int = betterproto.int32_field(4)
    action: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class CMsgAmGrantGuestPasses2Response(betterproto.Message):
    eresult: int = betterproto.int32_field(1)
    passes_granted: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class CgcSystemMsgGetAccountDetails(betterproto.Message):
    steamid: int = betterproto.fixed64_field(1)
    appid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CgcSystemMsgGetAccountDetailsResponse(betterproto.Message):
    eresult_deprecated: int = betterproto.uint32_field(1)
    account_name: str = betterproto.string_field(2)
    persona_name: str = betterproto.string_field(3)
    is_profile_public: bool = betterproto.bool_field(4)
    is_inventory_public: bool = betterproto.bool_field(5)
    is_vac_banned: bool = betterproto.bool_field(7)
    is_cyber_cafe: bool = betterproto.bool_field(8)
    is_school_account: bool = betterproto.bool_field(9)
    is_limited: bool = betterproto.bool_field(10)
    is_subscribed: bool = betterproto.bool_field(11)
    package: int = betterproto.uint32_field(12)
    is_free_trial_account: bool = betterproto.bool_field(13)
    free_trial_expiration: int = betterproto.uint32_field(14)
    is_low_violence: bool = betterproto.bool_field(15)
    is_account_locked_down: bool = betterproto.bool_field(16)
    is_community_banned: bool = betterproto.bool_field(17)
    is_trade_banned: bool = betterproto.bool_field(18)
    trade_ban_expiration: int = betterproto.uint32_field(19)
    accountid: int = betterproto.uint32_field(20)
    suspension_end_time: int = betterproto.uint32_field(21)
    currency: str = betterproto.string_field(22)
    steam_level: int = betterproto.uint32_field(23)
    friend_count: int = betterproto.uint32_field(24)
    account_creation_time: int = betterproto.uint32_field(25)
    is_steamguard_enabled: bool = betterproto.bool_field(27)
    is_phone_verified: bool = betterproto.bool_field(28)
    is_two_factor_auth_enabled: bool = betterproto.bool_field(29)
    two_factor_enabled_time: int = betterproto.uint32_field(30)
    phone_verification_time: int = betterproto.uint32_field(31)
    phone_id: int = betterproto.uint64_field(33)
    is_phone_identifying: bool = betterproto.bool_field(34)
    rt_identity_linked: int = betterproto.uint32_field(35)
    rt_birth_date: int = betterproto.uint32_field(36)
    txn_country_code: str = betterproto.string_field(37)


@dataclass(eq=False, repr=False)
class CMsgGcGetPersonaNames(betterproto.Message):
    steamids: List[int] = betterproto.fixed64_field(1)


@dataclass(eq=False, repr=False)
class CMsgGcGetPersonaNamesResponse(betterproto.Message):
    succeeded_lookups: List["CMsgGcGetPersonaNamesResponsePersonaName"] = betterproto.message_field(1)
    failed_lookup_steamids: List[int] = betterproto.fixed64_field(2)


@dataclass(eq=False, repr=False)
class CMsgGcGetPersonaNamesResponsePersonaName(betterproto.Message):
    steamid: int = betterproto.fixed64_field(1)
    persona_name: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class CMsgGcCheckFriendship(betterproto.Message):
    steamid_left: int = betterproto.fixed64_field(1)
    steamid_right: int = betterproto.fixed64_field(2)


@dataclass(eq=False, repr=False)
class CMsgGcCheckFriendshipResponse(betterproto.Message):
    success: bool = betterproto.bool_field(1)
    found_friendship: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class CMsgGcMsgMasterSetDirectory(betterproto.Message):
    master_dir_index: int = betterproto.uint32_field(1)
    dir: List["CMsgGcMsgMasterSetDirectorySubGc"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CMsgGcMsgMasterSetDirectorySubGc(betterproto.Message):
    dir_index: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    box: str = betterproto.string_field(3)
    command_line: str = betterproto.string_field(4)
    gc_binary: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class CMsgGcMsgMasterSetDirectoryResponse(betterproto.Message):
    eresult: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class CMsgGcMsgWebApiJobRequestForwardResponse(betterproto.Message):
    dir_index: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CgcSystemMsgGetPurchaseTrustRequest(betterproto.Message):
    steamid: int = betterproto.fixed64_field(1)


@dataclass(eq=False, repr=False)
class CgcSystemMsgGetPurchaseTrustResponse(betterproto.Message):
    has_prior_purchase_history: bool = betterproto.bool_field(1)
    has_no_recent_password_resets: bool = betterproto.bool_field(2)
    is_wallet_cash_trusted: bool = betterproto.bool_field(3)
    time_all_trusted: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CMsgGchAccountVacStatusChange(betterproto.Message):
    steam_id: int = betterproto.fixed64_field(1)
    app_id: int = betterproto.uint32_field(2)
    rtime_vacban_starts: int = betterproto.uint32_field(3)
    is_banned_now: bool = betterproto.bool_field(4)
    is_banned_future: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class CMsgGcGetPartnerAccountLink(betterproto.Message):
    steamid: int = betterproto.fixed64_field(1)


@dataclass(eq=False, repr=False)
class CMsgGcGetPartnerAccountLinkResponse(betterproto.Message):
    pwid: int = betterproto.uint32_field(1)
    nexonid: int = betterproto.uint32_field(2)
    ageclass: int = betterproto.int32_field(3)
    id_verified: bool = betterproto.bool_field(4)
    is_adult: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class CMsgGcRoutingInfo(betterproto.Message):
    dir_index: List[int] = betterproto.uint32_field(1)
    method: "CMsgGcRoutingInfoRoutingMethod" = betterproto.enum_field(2)
    fallback: "CMsgGcRoutingInfoRoutingMethod" = betterproto.enum_field(3)
    protobuf_field: int = betterproto.uint32_field(4)
    webapi_param: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class CMsgGcMsgMasterSetWebApiRouting(betterproto.Message):
    entries: List["CMsgGcMsgMasterSetWebApiRoutingEntry"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CMsgGcMsgMasterSetWebApiRoutingEntry(betterproto.Message):
    interface_name: str = betterproto.string_field(1)
    method_name: str = betterproto.string_field(2)
    routing: "CMsgGcRoutingInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class CMsgGcMsgMasterSetClientMsgRouting(betterproto.Message):
    entries: List["CMsgGcMsgMasterSetClientMsgRoutingEntry"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CMsgGcMsgMasterSetClientMsgRoutingEntry(betterproto.Message):
    msg_type: int = betterproto.uint32_field(1)
    routing: "CMsgGcRoutingInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CMsgGcMsgMasterSetWebApiRoutingResponse(betterproto.Message):
    eresult: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class CMsgGcMsgMasterSetClientMsgRoutingResponse(betterproto.Message):
    eresult: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class CMsgGcMsgSetOptions(betterproto.Message):
    options: List["CMsgGcMsgSetOptionsOption"] = betterproto.enum_field(1)
    client_msg_ranges: List["CMsgGcMsgSetOptionsMessageRange"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CMsgGcMsgSetOptionsMessageRange(betterproto.Message):
    low: int = betterproto.uint32_field(1)
    high: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CMsgGchUpdateSession(betterproto.Message):
    steam_id: int = betterproto.fixed64_field(1)
    app_id: int = betterproto.uint32_field(2)
    online: bool = betterproto.bool_field(3)
    server_steam_id: int = betterproto.fixed64_field(4)
    server_addr: int = betterproto.uint32_field(5)
    server_port: int = betterproto.uint32_field(6)
    os_type: int = betterproto.uint32_field(7)
    client_addr: int = betterproto.uint32_field(8)
    extra_fields: List["CMsgGchUpdateSessionExtraField"] = betterproto.message_field(9)
    owner_id: int = betterproto.fixed64_field(10)
    cm_session_sysid: int = betterproto.uint32_field(11)
    cm_session_identifier: int = betterproto.uint32_field(12)
    depot_ids: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class CMsgGchUpdateSessionExtraField(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class CMsgNotificationOfSuspiciousActivity(betterproto.Message):
    steamid: int = betterproto.fixed64_field(1)
    appid: int = betterproto.uint32_field(2)
    multiple_instances: "CMsgNotificationOfSuspiciousActivityMultipleGameInstances" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class CMsgNotificationOfSuspiciousActivityMultipleGameInstances(betterproto.Message):
    app_instance_count: int = betterproto.uint32_field(1)
    other_steamids: List[int] = betterproto.fixed64_field(2)


@dataclass(eq=False, repr=False)
class CMsgDpPartnerMicroTxns(betterproto.Message):
    appid: int = betterproto.uint32_field(1)
    gc_name: str = betterproto.string_field(2)
    partner: "CMsgDpPartnerMicroTxnsPartnerInfo" = betterproto.message_field(3)
    transactions: List["CMsgDpPartnerMicroTxnsPartnerMicroTxn"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CMsgDpPartnerMicroTxnsPartnerMicroTxn(betterproto.Message):
    init_time: int = betterproto.uint32_field(1)
    last_update_time: int = betterproto.uint32_field(2)
    txn_id: int = betterproto.uint64_field(3)
    account_id: int = betterproto.uint32_field(4)
    line_item: int = betterproto.uint32_field(5)
    item_id: int = betterproto.uint64_field(6)
    def_index: int = betterproto.uint32_field(7)
    price: int = betterproto.uint64_field(8)
    tax: int = betterproto.uint64_field(9)
    price_usd: int = betterproto.uint64_field(10)
    tax_usd: int = betterproto.uint64_field(11)
    purchase_type: int = betterproto.uint32_field(12)
    steam_txn_type: int = betterproto.uint32_field(13)
    country_code: str = betterproto.string_field(14)
    region_code: str = betterproto.string_field(15)
    quantity: int = betterproto.int32_field(16)
    ref_trans_id: int = betterproto.uint64_field(17)


@dataclass(eq=False, repr=False)
class CMsgDpPartnerMicroTxnsPartnerInfo(betterproto.Message):
    partner_id: int = betterproto.uint32_field(1)
    partner_name: str = betterproto.string_field(2)
    currency_code: str = betterproto.string_field(3)
    currency_name: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class CMsgDpPartnerMicroTxnsResponse(betterproto.Message):
    eresult: int = betterproto.uint32_field(1)
    eerrorcode: "CMsgDpPartnerMicroTxnsResponseEErrorCode" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class CChinaAgreementSessionsStartAgreementSessionInGameRequest(betterproto.Message):
    appid: int = betterproto.uint32_field(1)
    steamid: int = betterproto.fixed64_field(2)


@dataclass(eq=False, repr=False)
class CChinaAgreementSessionsStartAgreementSessionInGameResponse(betterproto.Message):
    agreement_url: str = betterproto.string_field(1)
